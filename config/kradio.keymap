#include <dt-bindings/zmk/mouse.h>
#include <behaviors/anti_idle_mode.dtsi>
#include <dt-bindings/anti_idle_mode.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L 4 3 2 1 0 14 13 12 11 10 24 23 22 21 20
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            timeout-ms = <300>;
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
        };

        Backspace {
            timeout-ms = <300>;
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7 8>;
        };

        Tab {
            timeout-ms = <300>;
            bindings = <&kp TAB>;
            key-positions = <12 13 11>;
        };

        Escape {
            timeout-ms = <100>;
            bindings = <&kp ESCAPE>;
            key-positions = <3 2 1>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 16>;
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        ltm: layer-tap-momentary {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&mkp>;
        };

        lth: layer-tap-hold-while-undecided {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <150>;
            bindings = <&mo>, <&mkp>;
        };

        mto: momentary-or-toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };

        anti_idle {
            compatible = "zmk,anti-idle-generic";
            interval-ms = <60000>;
            bindings = <&mmv MOVE_DOWN &mmv MOVE_UP>;
            tap_ms = <40>;
            wait_ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T              &kp Y        &kp U         &kp I         &kp O        &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G              &kp H        &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L  &sl 4
&kp Z        &kp X        &kp C         &kp V         &kp B              &kp N        &kp M         &kp COMMA     &kp DOT      &kp SLASH
                                        &lt 1 TAB     &lt 6 BACKSPACE    &lt 3 SPACE  &lt 2 ENTER
            >;
        };

        symbol_layer {
            bindings = <
&kp RA(Q)               &kp PIPE                &kp RA(E)                &kp RA(NON_US_BSLH)      &kp GRAVE          &kp LS(GRAVE)             &kp RIGHT_BRACKET     &kp LS(RIGHT_BRACKET)    &kp RA(RIGHT_BRACKET)   &kp NON_US_HASH
&hml LGUI RA(NUMBER_7)  &hml LALT RA(NUMBER_8)  &hml LCTRL LS(NUMBER_8)  &hml LSHFT LS(NUMBER_7)  &kp NON_US_BSLH    &kp LS(NON_US_BACKSLASH)  &hmr RSHFT RA(MINUS)  &hmr LCTRL LS(NUMBER_9)  &hmr LALT RA(NUMBER_9)  &kp RA(NUMBER_0)
&none                   &none                   &none                    &none                    &none              &none                     &none                 &none                    &none                   &none
                                                                         &trans                   &trans             &trans                    &trans
            >;
        };

        number_layer {
            bindings = <
&kp N1                  &kp N2                  &kp N3                   &kp N4                   &kp N5              &kp N6            &kp N7                &kp N8                   &kp N9                  &kp N0
&hml LGUI LS(NUMBER_1)  &hml LALT LS(NUMBER_2)  &hml LCTRL LS(NUMBER_3)  &hml LSHFT LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &hmr RSHFT LS(MINUS)  &hmr LCTRL LS(NUMBER_8)  &hmr LALT LS(NUMBER_9)  &kp LS(NUMBER_0)
&none                   &none                   &none                    &none                    &none               &none             &none                 &none                    &none                   &none
                                                                         &trans                   &trans              &trans            &trans
            >;
        };

        navigation_layer {
            bindings = <
&kp ESCAPE       &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC    &kp INS     &kp HOME  &kp UP    &kp END    &kp PAGE_UP
&kp PRINTSCREEN  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_BRIGHTNESS_DEC    &kp DELETE  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN
&none            &none              &none             &none            &none                   &none       &none     &none     &none      &none
                                                      &trans           &trans                  &trans      &trans
            >;
        };

        iso_layer {
            bindings = <
&trans            &trans     &trans  &trans  &trans    &trans  &kp LEFT_BRACKET  &trans  &kp SEMICOLON  &trans
&kp SINGLE_QUOTE  &kp MINUS  &trans  &trans  &trans    &trans  &trans            &trans  &trans         &trans
&trans            &trans     &trans  &trans  &trans    &trans  &trans            &trans  &trans         &trans
                                     &trans  &trans    &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp F16  &kp F17  &kp F18  &kp F19  &kp F20
&none    &none    &none    &none    &none      &none    &none    &none    &none    &none
                           &trans   &trans     &trans   &trans
            >;
        };

        fun_layer {
            bindings = <
&none          &none              &msc SCRL_UP    &none          &none     &none   &none   &none  &none  &none
&kp LC(PG_UP)  &kp LC(PAGE_DOWN)  &msc SCRL_DOWN  &kp LEFT_GUI   &none     &none   &none   &none  &none  &none
&none          &kp LC(LS(X))      &kp LC(LS(C))   &kp LC(LS(V))  &none     &none   &none   &none  &none  &none
                                                  &trans         &trans    &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
&none  &none     &mkp MB4  &mkp MB5  &none     &none   &mkp MB4  &mkp MB5  &none     &none
&none  &mkp MB3  &mkp MB2  &mkp MB1  &none     &none   &mkp MB1  &mkp MB2  &mkp MB3  &none
&none  &none     &none     &none     &none     &none   &none     &none     &none     &none
                           &trans    &trans    &trans  &trans
            >;
        };

        extra {
            bindings = <
&bootloader  &studio_unlock  &none  &none   &none     &none   &none   &none  &studio_unlock  &bootloader
&none        &none           &none  &none   &none     &none   &none   &none  &none           &none
&none        &none           &none  &none   &none     &none   &none   &none  &none           &none
                                    &trans  &trans    &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Settings {
            if-layers = <1 2>;
            then-layer = <5>;
        };

        Extra {
            if-layers = <3 6>;
            then-layer = <8>;
        };

        Mousel {
            if-layers = <1 6>;
            then-layer = <7>;
        };

        Mouser {
            if-layers = <3 2>;
            then-layer = <7>;
        };
    };
};
